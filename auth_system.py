from models import Session, User, Hotel
from datetime import date

class AuthSystem:
    def __init__(self):
        self.session = Session()
        self.current_user = None
    
    def create_super_admin(self):
        """Super admin user create ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        # Check if super admin already exists
        existing_admin = self.session.query(User).filter(User.user_type == 'super_admin').first()
        if existing_admin:
            return existing_admin
        
        super_admin = User(
            username='superadmin',
            email='super@admin.com',
            user_type='super_admin',
            full_name='System Super Administrator',
            phone='0112345678'
        )
        super_admin.set_password('admin123')
        
        self.session.add(super_admin)
        self.session.commit()
        print("‚úÖ Super admin account created successfully!")
        return super_admin
    
    def register_user(self):
        """‡∂±‡∑Ä user register ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        print("\n" + "="*50)
        print("‡∂±‡∑Ä ‡∂ú‡∑í‡∂´‡∑î‡∂∏ ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("="*50)
        
        print("‡∂î‡∂∂‡∂ú‡∑ö ‡∂ú‡∑í‡∂´‡∑î‡∂∏‡∑ö ‡∑Ä‡∂ª‡∑ä‡∂ú‡∂∫ ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±:")
        print("1. ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂Ö‡∂∫‡∑í‡∂≠‡∑í‡∂ö‡∂ª‡∑î (Hotel Admin)")
        print("2. ‡∂ú‡∂±‡∑î‡∂Ø‡∑ô‡∂±‡∑î‡∂ö‡∂ª‡∑î (Customer)")
        
        user_type_choice = input("‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏ (1/2): ")
        
        if user_type_choice == '1':
            user_type = 'hotel_admin'
        elif user_type_choice == '2':
            user_type = 'customer'
        else:
            print("‚ùå ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂±‡∑ú‡∑Ä‡∂± ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏!")
            return None
        
        username = input("‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂±‡∑è‡∂∏‡∂∫: ")
        password = input("‡∂∏‡∑î‡∂ª‡∂¥‡∂Ø‡∂∫: ")
        email = input("‡∂ä‡∂∏‡∑ö‡∂Ω‡∑ä: ")
        full_name = input("‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∂±‡∂∏: ")
        phone = input("‡∂Ø‡∑î‡∂ª‡∂ö‡∂Æ‡∂± ‡∂Ö‡∂Ç‡∂ö‡∂∫: ")
        
        # Check if username or email already exists
        existing_user = self.session.query(User).filter(
            (User.username == username) | (User.email == email)
        ).first()
        
        if existing_user:
            print("‚ùå ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂±‡∑è‡∂∏‡∂∫ ‡∑Ñ‡∑ù ‡∂ä‡∂∏‡∑ö‡∂Ω‡∑ä ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì!")
            return None
        
        user = User(
            username=username,
            email=email,
            user_type=user_type,
            full_name=full_name,
            phone=phone
        )
        user.set_password(password)
        
        self.session.add(user)
        self.session.commit()
        
        print(f"‚úÖ {full_name} ‡∂ú‡∑í‡∂´‡∑î‡∂∏ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì!")
        return user
    
    def login(self):
        """User login ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        print("\n" + "="*50)
        print("‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í‡∂∫‡∂ß ‡∂¥‡∑í‡∑Ä‡∑í‡∑É‡∑ì‡∂∏")
        print("="*50)
        
        username = input("‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂±‡∑è‡∂∏‡∂∫: ")
        password = input("‡∂∏‡∑î‡∂ª‡∂¥‡∂Ø‡∂∫: ")
        
        user = self.session.query(User).filter(
            User.username == username,
            User.is_active == True
        ).first()
        
        if user and user.check_password(password):
            self.current_user = user
            print(f"‚úÖ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂¥‡∑í‡∑Ä‡∑í‡∑É‡∑í‡∂∫! ‡∂¥‡∑í‡∑Ö‡∑í‡∂ú‡∂±‡∑í‡∂∏‡∑î {user.full_name}!")
            return user
        else:
            print("‚ùå ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂±‡∑ú‡∑Ä‡∂± ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂±‡∑è‡∂∏‡∂∫ ‡∑Ñ‡∑ù ‡∂∏‡∑î‡∂ª‡∂¥‡∂Ø‡∂∫!")
            return None
    
    def logout(self):
        """Logout ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        if self.current_user:
            print(f"üëã {self.current_user.full_name} ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑ä ‡∂¥‡∑í‡∂ß‡∑Ä‡∑ô‡∂∏‡∑í‡∂±‡∑ä...")
            self.current_user = None
        else:
            print("‚ùå ‡∂ö‡∑í‡∑É‡∑í‡∑Ä‡∑ô‡∂ö‡∑î ‡∂¥‡∑í‡∑Ä‡∑í‡∑É ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠!")
    
    def get_current_user(self):
        """‡∑Ä‡∂ª‡∑ä‡∂≠‡∂∏‡∑è‡∂± user ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏"""
        return self.current_user
    
    def has_permission(self, required_type):
        """Permissions check ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        if not self.current_user:
            return False
        
        if self.current_user.user_type == 'super_admin':
            return True
        
        if required_type == 'hotel_admin' and self.current_user.user_type in ['hotel_admin', 'super_admin']:
            return True
        
        if required_type == 'customer' and self.current_user.user_type in ['customer', 'super_admin']:
            return True
        
        return False
    
    def close(self):
        """Session close ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        self.session.close()