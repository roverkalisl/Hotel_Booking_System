from models import Session, Hotel, Room, Booking
from datetime import datetime, date, timedelta
import os

class HotelManagement:
    def __init__(self):
        self.session = Session()
    
    def add_hotel(self):
        """‡∂±‡∑Ä ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        print("\n" + "="*50)
        print("‡∂±‡∑Ä ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("="*50)
        
        name = input("‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂±‡∂∏: ")
        location = input("‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫: ")
        description = input("‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∂∫: ")
        owner_name = input("‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∂ú‡∑ö ‡∂±‡∂∏: ")
        owner_email = input("‡∂ä‡∂∏‡∑ö‡∂Ω‡∑ä: ")
        contact_number = input("‡∂Ø‡∑î‡∂ª‡∂ö‡∂Æ‡∂± ‡∂Ö‡∂Ç‡∂ö‡∂∫: ")
        price_per_night = float(input("‡∂ª‡∑è‡∂≠‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∂ö ‡∂∏‡∑í‡∂Ω (‡∂ª‡∑î‡∂¥‡∑í‡∂∫‡∂Ω‡∑ä): "))
        total_rooms = int(input("‡∂∏‡∑î‡∑Ö‡∑î ‡∂ö‡∑è‡∂∏‡∂ª ‡∂ú‡∂´‡∂±: "))
        amenities = input("‡∑É‡∑î‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç‡∑ì ‡∑É‡∑ö‡∑Ä‡∑è (comma separated): ")
        
        hotel = Hotel(
            name=name,
            location=location,
            description=description,
            owner_name=owner_name,
            owner_email=owner_email,
            contact_number=contact_number,
            price_per_night=price_per_night,
            total_rooms=total_rooms,
            available_rooms=total_rooms,
            amenities=amenities
        )
        
        self.session.add(hotel)
        self.session.commit()
        
        # ‡∂ö‡∑è‡∂∏‡∂ª create ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        self._create_rooms_for_hotel(hotel.id, total_rooms)
        
        # ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        self._add_hotel_image(hotel)
        
        print(f"\n‚úÖ '{name}' ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì!")
        print(f"üÜî ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ID: {hotel.id}")
        return hotel
    
    def _create_rooms_for_hotel(self, hotel_id, total_rooms):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂ë‡∂ö‡∂ß ‡∂ö‡∑è‡∂∏‡∂ª create ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        room_types = [
            {'type': 'Single', 'capacity': 1, 'base_price': 4000},
            {'type': 'Double', 'capacity': 2, 'base_price': 6000},
            {'type': 'Suite', 'capacity': 4, 'base_price': 10000},
            {'type': 'Deluxe', 'capacity': 3, 'base_price': 8000}
        ]
        
        for i in range(1, total_rooms + 1):
            room_type = room_types[i % len(room_types)]
            
            room = Room(
                hotel_id=hotel_id,
                room_number=f"{i:03d}",
                room_type=room_type['type'],
                capacity=room_type['capacity'],
                price_per_night=room_type['base_price'] + (i % 4) * 500,
                is_available=True,
                features=f"WiFi, AC, TV, {room_type['type']} Room"
            )
            self.session.add(room)
        
        self.session.commit()
    
    def _add_hotel_image(self, hotel):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂ë‡∂ö‡∂ß ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        print("\n--- ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---")
        choice = input("‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂Ø? (y/n): ")
        
        if choice.lower() == 'y':
            image_path = input("‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫‡∑ö path ‡∂ë‡∂ö ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±: ")
            
            if os.path.exists(image_path):
                try:
                    with open(image_path, 'rb') as f:
                        image_data = f.read()
                    
                    hotel.image_data = image_data
                    hotel.image_filename = os.path.basename(image_path)
                    hotel.image_content_type = 'image/jpeg'
                    self.session.commit()
                    print("‚úÖ ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì!")
                except Exception as e:
                    print(f"‚ùå ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∑Ä‡∑í‡∂∫: {e}")
            else:
                print("‚ùå ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫ ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫!")
    
    def view_all_hotels(self):
        """‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂∂‡∑ê‡∂Ω‡∑ì‡∂∏"""
        hotels = self.session.query(Hotel).all()
        
        if not hotels:
            print("\n‚ùå ‡∂ö‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∂∫‡∂ö‡∑ä ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∑Ä‡∑ì ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠!")
            return
        
        print(f"\n" + "="*60)
        print(f"‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ({len(hotels)})")
        print("="*60)
        
        for hotel in hotels:
            self._display_hotel_details(hotel)
    
    def _display_hotel_details(self, hotel):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∑ì‡∂∏"""
        print(f"\nüè® {hotel.name} (ID: {hotel.id})")
        print(f"üìç ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫: {hotel.location}")
        print(f"üìù ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∂∫: {hotel.description}")
        print(f"üí∞ ‡∂∏‡∑í‡∂Ω: ‡∂ª‡∑î. {hotel.price_per_night:,.2f} per night")
        print(f"üõèÔ∏è ‡∂ö‡∑è‡∂∏‡∂ª: {hotel.available_rooms}/{hotel.total_rooms} available")
        print(f"üë§ ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î: {hotel.owner_name}")
        print(f"üìû ‡∂Ø‡∑î‡∂ª‡∂ö‡∂Æ‡∂±: {hotel.contact_number}")
        print(f"‚úâÔ∏è ‡∂ä‡∂∏‡∑ö‡∂Ω‡∑ä: {hotel.owner_email}")
        print(f"‚≠ê ‡∑É‡∑ö‡∑Ä‡∑è: {hotel.amenities}")
        
        if hotel.image_data:
            print("üñºÔ∏è ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫: ‚úÖ Available")
        else:
            print("üñºÔ∏è ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫: ‚ùå Not Available")
        
        print(f"üìÖ ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂Ø‡∑í‡∂±‡∂∫: {hotel.created_at}")
        print("-" * 60)
    
    def search_hotels(self):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏"""
        print("\n" + "="*50)
        print("‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏")
        print("="*50)
        
        print("‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∑Ä‡∑í‡∂ö‡∂Ω‡∑ä‡∂¥:")
        print("1. ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫ ‡∂Ö‡∂±‡∑î‡∑Ä")
        print("2. ‡∂∏‡∑í‡∂Ω ‡∂Ö‡∂±‡∑î‡∑Ä")
        print("3. ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫ ‡∑É‡∑Ñ ‡∂∏‡∑í‡∂Ω ‡∂Ö‡∂±‡∑î‡∑Ä")
        
        choice = input("‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏ (1/2/3): ")
        
        location = None
        max_price = None
        
        if choice in ['1', '3']:
            location = input("‡∑É‡∑ô‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫: ")
        
        if choice in ['2', '3']:
            try:
                max_price = float(input("‡∂ã‡∂¥‡∂ª‡∑í‡∂∏ ‡∂∏‡∑í‡∂Ω (‡∂ª‡∑î‡∂¥‡∑í‡∂∫‡∂Ω‡∑ä): "))
            except ValueError:
                print("‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂∏‡∑í‡∂Ω‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!")
                return
        
        hotels = self.session.query(Hotel)
        
        if location:
            hotels = hotels.filter(Hotel.location.ilike(f"%{location}%"))
        if max_price:
            hotels = hotels.filter(Hotel.price_per_night <= max_price)
        
        results = hotels.all()
        
        if not results:
            print(f"\n‚ùå '{location if location else ''}' ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫!")
            return
        
        print(f"\nüîç ‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂µ‡∂Ω ({len(results)})")
        print("="*50)
        
        for hotel in results:
            self._display_hotel_details(hotel)
    
    def update_hotel(self):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        print("\n" + "="*50)
        print("‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("="*50)
        
        hotel_id = input("‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ID: ")
        
        try:
            hotel_id = int(hotel_id)
            hotel = self.session.query(Hotel).filter(Hotel.id == hotel_id).first()
            
            if not hotel:
                print("‚ùå ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫!")
                return
            
            print(f"\nüè® ‡∑Ä‡∂≠‡∑ä‡∂∏‡∂±‡∑ä ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª: {hotel.name}")
            self._display_hotel_details(hotel)
            
            print("\n‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂ö‡∑ä‡∑Ç‡∑ö‡∂≠‡∑ä‚Äç‡∂ª‡∂∫ ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±:")
            print("1. ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂±‡∂∏")
            print("2. ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫")
            print("3. ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∂∫")
            print("4. ‡∂Ø‡∑î‡∂ª‡∂ö‡∂Æ‡∂± ‡∂Ö‡∂Ç‡∂ö‡∂∫")
            print("5. ‡∂∏‡∑í‡∂Ω")
            print("6. ‡∑É‡∑ö‡∑Ä‡∑è")
            print("7. ‡∂¢‡∂∫‡∑è‡∂ª‡∑î‡∂¥‡∂∫")
            
            field_choice = input("‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏ (1-7): ")
            
            if field_choice == '1':
                hotel.name = input("‡∂±‡∑Ä ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂±‡∂∏: ")
            elif field_choice == '2':
                hotel.location = input("‡∂±‡∑Ä ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫: ")
            elif field_choice == '3':
                hotel.description = input("‡∂±‡∑Ä ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∂∫: ")
            elif field_choice == '4':
                hotel.contact_number = input("‡∂±‡∑Ä ‡∂Ø‡∑î‡∂ª‡∂ö‡∂Æ‡∂± ‡∂Ö‡∂Ç‡∂ö‡∂∫: ")
            elif field_choice == '5':
                hotel.price_per_night = float(input("‡∂±‡∑Ä ‡∂∏‡∑í‡∂Ω: "))
            elif field_choice == '6':
                hotel.amenities = input("‡∂±‡∑Ä ‡∑É‡∑ö‡∑Ä‡∑è: ")
            elif field_choice == '7':
                self._add_hotel_image(hotel)
            else:
                print("‚ùå ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂±‡∑ú‡∑Ä‡∂± ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏!")
                return
            
            self.session.commit()
            print("‚úÖ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì!")
            
        except ValueError:
            print("‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!")
        except Exception as e:
            print(f"‚ùå ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∑Ä‡∑í‡∂∫: {e}")
    
    def delete_hotel(self):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        print("\n" + "="*50)
        print("‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("="*50)
        
        hotel_id = input("‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ID: ")
        
        try:
            hotel_id = int(hotel_id)
            hotel = self.session.query(Hotel).filter(Hotel.id == hotel_id).first()
            
            if not hotel:
                print("‚ùå ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫!")
                return
            
            print(f"\n‚ö†Ô∏è ‡∂î‡∂∂‡∂ß '{hotel.name}' ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂Ø?")
            confirmation = input("‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß 'YES' ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±: ")
            
            if confirmation.upper() == 'YES':
                # ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∂ö‡∑è‡∂∏‡∂ª ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
                self.session.query(Room).filter(Room.hotel_id == hotel_id).delete()
                # ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∂∂‡∑î‡∂ö‡∑í‡∂±‡∑ä‡∂ú‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
                self.session.query(Booking).filter(Booking.hotel_id == hotel_id).delete()
                # ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
                self.session.delete(hotel)
                self.session.commit()
                print("‚úÖ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∑Ñ ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì!")
            else:
                print("‚ùå ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì!")
                
        except ValueError:
            print("‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ID ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!")
        except Exception as e:
            print(f"‚ùå ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∑Ä‡∑í‡∂∫: {e}")
    
    def view_hotel_stats(self):
        """‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è‡∂Ω‡∑ö‡∂õ‡∂±"""
        hotels = self.session.query(Hotel).all()
        
        if not hotels:
            print("\n‚ùå ‡∂ö‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∂∫‡∂ö‡∑ä ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠!")
            return
        
        total_hotels = len(hotels)
        total_rooms = sum(hotel.total_rooms for hotel in hotels)
        available_rooms = sum(hotel.available_rooms for hotel in hotels)
        total_capacity = sum(hotel.total_rooms * hotel.price_per_night for hotel in hotels) / len(hotels) if hotels else 0
        
        print("\n" + "="*50)
        print("‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è‡∂Ω‡∑ö‡∂õ‡∂±")
        print("="*50)
        print(f"üè® ‡∂∏‡∑î‡∑Ö‡∑î ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä: {total_hotels}")
        print(f"üõèÔ∏è ‡∂∏‡∑î‡∑Ö‡∑î ‡∂ö‡∑è‡∂∏‡∂ª: {total_rooms}")
        print(f"‚úÖ ‡∂≠‡∑í‡∂∂‡∑ô‡∂± ‡∂ö‡∑è‡∂∏‡∂ª: {available_rooms}")
        print(f"üìä ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∂∏‡∑í‡∂Ω: ‡∂ª‡∑î. {total_capacity:,.2f}")
        
        # Location-wise statistics
        locations = {}
        for hotel in hotels:
            if hotel.location in locations:
                locations[hotel.location] += 1
            else:
                locations[hotel.location] = 1
        
        print(f"\nüìç ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫ ‡∂Ö‡∂±‡∑î‡∑Ä ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä:")
        for location, count in locations.items():
            print(f"   {location}: {count} ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä")
    
    def close(self):
        """Session close ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏"""
        self.session.close()

def main():
    manager = HotelManagement()
    
    while True:
        print("\n" + "="*60)
        print("üè® ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂∏‡∑ê‡∂±‡∑ö‡∂¢‡∑ä‡∂∏‡∂±‡∑ä‡∂ß‡∑ä ‡∑É‡∑í‡∑É‡∑ä‡∂ß‡∂∏‡∑ä")
        print("="*60)
        print("1. üÜï ‡∂±‡∑Ä ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("2. üìã ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂∂‡∑ê‡∂Ω‡∑ì‡∂∏")
        print("3. üîç ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏")
        print("4. ‚úèÔ∏è ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("5. üóëÔ∏è ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏")
        print("6. üìä ‡∑É‡∂Ç‡∂õ‡∑ä‚Äç‡∂∫‡∑è‡∂Ω‡∑ö‡∂õ‡∂± ‡∂∂‡∑ê‡∂Ω‡∑ì‡∂∏")
        print("7. üö™ ‡∂¥‡∑í‡∂ß‡∑Ä‡∑ì‡∂∏")
        
        choice = input("\n‡∂î‡∂∂‡∂ú‡∑ö ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏ ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (1-7): ")
        
        if choice == '1':
            manager.add_hotel()
        elif choice == '2':
            manager.view_all_hotels()
        elif choice == '3':
            manager.search_hotels()
        elif choice == '4':
            manager.update_hotel()
        elif choice == '5':
            manager.delete_hotel()
        elif choice == '6':
            manager.view_hotel_stats()
        elif choice == '7':
            print("\n‚úÖ ‡∑Ñ‡∑ú‡∂ß‡∑ô‡∂Ω‡∑ä ‡∂∏‡∑ê‡∂±‡∑ö‡∂¢‡∑ä‡∂∏‡∂±‡∑ä‡∂ß‡∑ä ‡∑É‡∑í‡∑É‡∑ä‡∂ß‡∂∏‡∑ä ‡∑Ä‡∑É‡∑è ‡∂Ø‡∂∏‡∂∏‡∑í‡∂±‡∑ä...")
            manager.close()
            break
        else:
            print("‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂≠‡∑ö‡∂ª‡∑ì‡∂∏‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (1-7)!")
        
        # Continue prompt
        if choice != '7':
            input("\nEnter ‡∂∂‡∑ú‡∂≠‡∑ä‡∂≠‡∂∏ ‡∂î‡∂∂‡∂±‡∑ä‡∂± ‡∂â‡∂Ø‡∑í‡∂ª‡∑í‡∂∫‡∂ß ‡∂∫‡∑è‡∂∏‡∂ß...")

if __name__ == "__main__":
    main()